
floating_planar = mdl_floating_planar();

floating_planar.fast = 0;

figure;
plot_floating(floating_planar,floating_planar.qn)

n = floating_planar.n;

q_sym = sym('q', [1,n], 'real');
qd_sym = sym('qd', [1,n], 'real');
tau_sym = sym('qdd', [1,n], 'real');


addpath(genpath('twolinkfloating'));

floating_planar.sym;
ddq = floating_planar.nofriction.accel(q_sym,qd_sym,tau_sym);


ode_fun = casadi.Function('fun',{q.value,dq.value,tau.value},{ddq.value});

q0 = floating_planar.qn;
qd0 = [2,5,1,0];

x0 = [q0(:); qd0(:)];

tf = 2;
dt = 0.04;

[t,y] = ode45(@doll_dyn, [0:dt:tf], x0, [], floating_planar,ode_fun);


q = y(:,1:n);
qd = y(:,n+1:2*n);

figure
plot_floating(floating_planar,q,'delay', dt)


% XDD = J(Q)QDD + JDOT(Q)QD

Jdot = jacob_dot(robot, q, qd)
